{"version":3,"sources":["context/SearchContext.js","components/Header.js","services/getFlickrFeed.js","components/Card.js","components/Results.js","context/keywordsReducer.js","FlickrApp.js","index.js"],"names":["SearchContext","createContext","require","Header","useContext","keywords","dispatch","className","type","value","onChange","event","payload","target","placeholder","getFlickrFeed","tags","a","url","encodeURI","fetch","response","json","items","map","node","author","split","title","link","image","media","m","description","dateTaken","date_taken","Card","bgStyle","backgroundImage","style","tag","href","rel","Results","useState","data","loading","images","setImages","useEffect","then","item","index","keywordsReducer","state","action","FlickrApp","useReducer","Provider","ReactDOM","render","document","getElementById"],"mappings":"kPAEaA,GAAgBC,EAFHC,EAAQ,GAA1BD,iBCGKE,EAAS,WAAO,IAAD,EACKC,qBAAWJ,GAAjCK,EADiB,EACjBA,SAAUC,EADO,EACPA,SASjB,OACI,yBAAQC,UAAU,OAAlB,UACI,4CACA,uBACIC,KAAK,OACLD,UAAU,eACVE,MAAOJ,EACPK,SAdgB,SAACC,GACzBL,EAAS,CACLE,KAAM,SACNI,QAASD,EAAME,OAAOJ,SAYlBK,YAAY,yC,gCCrBfC,EAAa,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,yDACrBD,EADqB,yCAEd,IAFc,cAKnBE,EALmB,+CAK2BC,UAAUH,IALrC,SAMFI,MAAMF,GANJ,cAMnBG,EANmB,gBAOHA,EAASC,OAPN,uBAOlBC,EAPkB,EAOlBA,MAPkB,kBASlBA,EAAMC,KAAI,SAAAC,GAGb,IAAMC,EAASD,EAAKC,OAAOC,MAAM,KAAK,GAEtC,MAAO,CACHC,MAAOH,EAAKG,MACZC,KAAMJ,EAAKI,KACXC,MAAOL,EAAKM,MAAMC,EAClBN,OAAQA,EACRO,YAAaR,EAAKQ,YAClBC,UAAWT,EAAKU,WAChBnB,KAAMS,EAAKT,UArBM,4CAAH,sDCGboB,G,MAAO,SAAC,GAAgE,IAA/DR,EAA8D,EAA9DA,MAAOC,EAAuD,EAAvDA,KAAMC,EAAiD,EAAjDA,MAAoBJ,GAA6B,EAA1CO,YAA0C,EAA7BP,QAAmBV,GAAU,EAArBkB,UAAqB,EAAVlB,MAChEqB,EAAU,CACZC,gBAAgB,OAAD,OAASR,EAAT,MAGnB,OACI,qBAAKvB,UAAU,kCAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAagC,MAAOF,IACnC,sBAAK9B,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA6BqB,IAG7B,mBAAGrB,UAAU,sBAAb,SAAqCS,EAAKW,MAAM,KAAKH,KAAI,SAACgB,GAAU,OAAO,+BAAOA,SAClF,oBAAGjC,UAAU,wBAAb,iBAA2CmB,KAC3C,mBAAGe,KAAMZ,EAAMa,IAAI,aAAa7B,OAAO,SAASN,UAAU,4BAA1D,sCCZPoC,EAAU,WAAO,IACnBtC,EAAYD,qBAAWJ,GAAvBK,SADkB,EAGGuC,mBAAS,CACjCC,KAAM,GACNC,SAAS,IALY,mBAGlBC,EAHkB,KAGVC,EAHU,KAsBzB,OAdAC,qBAAU,WACFD,EAAU,CACNH,KAAM,GACNC,SAAS,IAGb/B,EAAcV,GAAU6C,MAAK,SAAAH,GACzBC,EAAU,CACNH,KAAME,EACND,SAAS,SAGtB,CAACzC,IAGA,yBAASE,UAAU,OAAnB,SACI,qBAAKA,UAAU,MAAf,SAEIwC,EAAOF,KAAKrB,KAAI,SAAC2B,EAAMC,GACnB,OAAO,cAAC,EAAD,eAESD,GADCC,EAAQD,EAAKjB,mBClCrCmB,EAAkB,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACnD,OAAQA,EAAO/C,MACX,IAAK,SACD,OAAO+C,EAAO3C,QAElB,QACI,OAAO0C,ICCNE,EAAY,WAAO,IAAD,EAEEC,qBAAWJ,EAAiB,IAF9B,mBAEpBhD,EAFoB,KAEVC,EAFU,KAI3B,OACI,eAACN,EAAc0D,SAAf,CAAwBjD,MAAO,CAACJ,WAAUC,YAA1C,UACI,cAAC,EAAD,IACA,cAAC,EAAD,QCTZqD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f9430094.chunk.js","sourcesContent":["const { createContext } = require('react');\n\nexport const SearchContext = createContext();","import React, { useContext } from 'react'\nimport { SearchContext } from '../context/SearchContext';\n\nexport const Header = () => {\n    const {keywords, dispatch} = useContext(SearchContext);\n\n    const handleKeywordUpdate = (event) => {\n        dispatch({\n            type: 'update',\n            payload: event.target.value\n        });\n    }\n\n    return (\n        <header className=\"mt-3\">\n            <h1>Flickr App</h1>\n            <input\n                type=\"text\"\n                className=\"form-control\"\n                value={keywords}\n                onChange={handleKeywordUpdate}\n                placeholder=\"Please enter a keyword to search\"\n            />\n        </header>\n    )\n}\n","export const getFlickrFeed = async (tags) => {\n    if(!tags){\n        return [];\n    }\n    // const url = `https://www.flickr.com/services/feeds/photos_public.gne?format=json&nojsoncallback=true&tags=${encodeURI(tags)}`;\n    const url = `https://flickr-api-wrapper.corzo.dev/${encodeURI(tags)}`;\n    const response = await fetch(url);\n    const {items} = await response.json();\n\n    return items.map(node => {\n\n        // only get the email address, otherwise it looks poluted\n        const author = node.author.split(\" \")[0];\n\n        return {\n            title: node.title,\n            link: node.link,\n            image: node.media.m,\n            author: author,\n            description: node.description,\n            dateTaken: node.date_taken,\n            tags: node.tags,\n        };\n    });\n}\n","import React from 'react'\nimport ReactHtmlParser from 'react-html-parser';\n\nexport const Card = ({title, link, image, description, author, dateTaken, tags}) => {\n    const bgStyle = {\n        backgroundImage: `url(${image})`\n    };\n\n    return (\n        <div className=\"col-sm-6 col-md-4 col-lg-3 mt-3\">\n            <div className=\"card\">\n                <div className=\"card-photo\" style={bgStyle}></div>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{ title }</h5>\n                    {/* Not worth to show the description, it has no useful information */}\n                    {/* <p className=\"card-text\">{ ReactHtmlParser (description) }</p> */}\n                    <p className=\"card-text card-tags\">{ tags.split(\" \").map((tag) => { return <span>{tag}</span>}) }</p>\n                    <p className=\"card-text card-author\">By: { author }</p>\n                    <a href={link} rel=\"noreferrer\" target=\"_blank\" className=\"btn btn-primary btn-block\">View full size</a>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext, useEffect, useState } from 'react'\n\nimport { getFlickrFeed } from '../services/getFlickrFeed'\nimport { SearchContext } from '../context/SearchContext'\nimport { Card } from './Card'\n\nexport const Results = () => {\n    const {keywords} = useContext(SearchContext);\n\n    const [images, setImages] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n            setImages({\n                data: [],\n                loading: true\n            });\n\n            getFlickrFeed(keywords).then(images => {\n                setImages({\n                    data: images,\n                    loading: false\n                });\n            });\n    }, [keywords]);\n\n    return (\n        <section className=\"mt-3\">\n            <div className=\"row\">\n            {\n                images.data.map((item, index) => {\n                    return <Card\n                                key={index + item.dateTaken}\n                                {...item}\n                            />\n                })\n            }\n\n            </div>\n        </section>\n    )\n}\n","export const keywordsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case \"update\":\n            return action.payload;\n\n        default:\n            return state;\n    }\n}\n","import React, { useReducer } from 'react'\nimport { Header } from './components/Header'\nimport { Results } from './components/Results'\n\nimport { SearchContext } from './context/SearchContext';\nimport { keywordsReducer } from './context/keywordsReducer';\n\nexport const FlickrApp = () => {\n\n    const [keywords, dispatch] = useReducer(keywordsReducer, '');\n\n    return (\n        <SearchContext.Provider value={{keywords, dispatch}}>\n            <Header />\n            <Results />\n        </SearchContext.Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {FlickrApp} from './FlickrApp';\n\nReactDOM.render(\n  <FlickrApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}